/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package co.cp.orderly.kafka.model.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ShopApprovalResponseAvroModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4754338626953826628L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ShopApprovalResponseAvroModel\",\"namespace\":\"co.cp.orderly.kafka.model.avro\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"ShopId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"orderId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"orderApprovalStatus\",\"type\":{\"type\":\"enum\",\"name\":\"OrderApprovalStatus\",\"symbols\":[\"APPROVED\",\"REJECTED\"]}},{\"name\":\"errorMessages\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<ShopApprovalResponseAvroModel> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ShopApprovalResponseAvroModel> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ShopApprovalResponseAvroModel> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ShopApprovalResponseAvroModel> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ShopApprovalResponseAvroModel> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ShopApprovalResponseAvroModel to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ShopApprovalResponseAvroModel from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ShopApprovalResponseAvroModel instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ShopApprovalResponseAvroModel fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String id;
  private java.lang.String sagaId;
  private java.lang.String ShopId;
  private java.lang.String orderId;
  private java.time.Instant createdAt;
  private co.cp.orderly.kafka.model.avro.OrderApprovalStatus orderApprovalStatus;
  private java.util.List<java.lang.String> errorMessages;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ShopApprovalResponseAvroModel() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param sagaId The new value for sagaId
   * @param ShopId The new value for ShopId
   * @param orderId The new value for orderId
   * @param createdAt The new value for createdAt
   * @param orderApprovalStatus The new value for orderApprovalStatus
   * @param errorMessages The new value for errorMessages
   */
  public ShopApprovalResponseAvroModel(java.lang.String id, java.lang.String sagaId, java.lang.String ShopId, java.lang.String orderId, java.time.Instant createdAt, co.cp.orderly.kafka.model.avro.OrderApprovalStatus orderApprovalStatus, java.util.List<java.lang.String> errorMessages) {
    this.id = id;
    this.sagaId = sagaId;
    this.ShopId = ShopId;
    this.orderId = orderId;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.orderApprovalStatus = orderApprovalStatus;
    this.errorMessages = errorMessages;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return sagaId;
    case 2: return ShopId;
    case 3: return orderId;
    case 4: return createdAt;
    case 5: return orderApprovalStatus;
    case 6: return errorMessages;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = value$ != null ? value$.toString() : null; break;
    case 1: sagaId = value$ != null ? value$.toString() : null; break;
    case 2: ShopId = value$ != null ? value$.toString() : null; break;
    case 3: orderId = value$ != null ? value$.toString() : null; break;
    case 4: createdAt = (java.time.Instant)value$; break;
    case 5: orderApprovalStatus = (co.cp.orderly.kafka.model.avro.OrderApprovalStatus)value$; break;
    case 6: errorMessages = (java.util.List<java.lang.String>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'sagaId' field.
   * @return The value of the 'sagaId' field.
   */
  public java.lang.String getSagaId() {
    return sagaId;
  }


  /**
   * Sets the value of the 'sagaId' field.
   * @param value the value to set.
   */
  public void setSagaId(java.lang.String value) {
    this.sagaId = value;
  }

  /**
   * Gets the value of the 'ShopId' field.
   * @return The value of the 'ShopId' field.
   */
  public java.lang.String getShopId() {
    return ShopId;
  }


  /**
   * Sets the value of the 'ShopId' field.
   * @param value the value to set.
   */
  public void setShopId(java.lang.String value) {
    this.ShopId = value;
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.lang.String getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.lang.String value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'orderApprovalStatus' field.
   * @return The value of the 'orderApprovalStatus' field.
   */
  public co.cp.orderly.kafka.model.avro.OrderApprovalStatus getOrderApprovalStatus() {
    return orderApprovalStatus;
  }


  /**
   * Sets the value of the 'orderApprovalStatus' field.
   * @param value the value to set.
   */
  public void setOrderApprovalStatus(co.cp.orderly.kafka.model.avro.OrderApprovalStatus value) {
    this.orderApprovalStatus = value;
  }

  /**
   * Gets the value of the 'errorMessages' field.
   * @return The value of the 'errorMessages' field.
   */
  public java.util.List<java.lang.String> getErrorMessages() {
    return errorMessages;
  }


  /**
   * Sets the value of the 'errorMessages' field.
   * @param value the value to set.
   */
  public void setErrorMessages(java.util.List<java.lang.String> value) {
    this.errorMessages = value;
  }

  /**
   * Creates a new ShopApprovalResponseAvroModel RecordBuilder.
   * @return A new ShopApprovalResponseAvroModel RecordBuilder
   */
  public static co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder newBuilder() {
    return new co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder();
  }

  /**
   * Creates a new ShopApprovalResponseAvroModel RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ShopApprovalResponseAvroModel RecordBuilder
   */
  public static co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder newBuilder(co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder other) {
    if (other == null) {
      return new co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder();
    } else {
      return new co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder(other);
    }
  }

  /**
   * Creates a new ShopApprovalResponseAvroModel RecordBuilder by copying an existing ShopApprovalResponseAvroModel instance.
   * @param other The existing instance to copy.
   * @return A new ShopApprovalResponseAvroModel RecordBuilder
   */
  public static co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder newBuilder(co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel other) {
    if (other == null) {
      return new co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder();
    } else {
      return new co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder(other);
    }
  }

  /**
   * RecordBuilder for ShopApprovalResponseAvroModel instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ShopApprovalResponseAvroModel>
    implements org.apache.avro.data.RecordBuilder<ShopApprovalResponseAvroModel> {

    private java.lang.String id;
    private java.lang.String sagaId;
    private java.lang.String ShopId;
    private java.lang.String orderId;
    private java.time.Instant createdAt;
    private co.cp.orderly.kafka.model.avro.OrderApprovalStatus orderApprovalStatus;
    private java.util.List<java.lang.String> errorMessages;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ShopId)) {
        this.ShopId = data().deepCopy(fields()[2].schema(), other.ShopId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.orderId)) {
        this.orderId = data().deepCopy(fields()[3].schema(), other.orderId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[4].schema(), other.createdAt);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.orderApprovalStatus)) {
        this.orderApprovalStatus = data().deepCopy(fields()[5].schema(), other.orderApprovalStatus);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.errorMessages)) {
        this.errorMessages = data().deepCopy(fields()[6].schema(), other.errorMessages);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing ShopApprovalResponseAvroModel instance
     * @param other The existing instance to copy.
     */
    private Builder(co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ShopId)) {
        this.ShopId = data().deepCopy(fields()[2].schema(), other.ShopId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.orderId)) {
        this.orderId = data().deepCopy(fields()[3].schema(), other.orderId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[4].schema(), other.createdAt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.orderApprovalStatus)) {
        this.orderApprovalStatus = data().deepCopy(fields()[5].schema(), other.orderApprovalStatus);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.errorMessages)) {
        this.errorMessages = data().deepCopy(fields()[6].schema(), other.errorMessages);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaId' field.
      * @return The value.
      */
    public java.lang.String getSagaId() {
      return sagaId;
    }


    /**
      * Sets the value of the 'sagaId' field.
      * @param value The value of 'sagaId'.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder setSagaId(java.lang.String value) {
      validate(fields()[1], value);
      this.sagaId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaId' field has been set.
      * @return True if the 'sagaId' field has been set, false otherwise.
      */
    public boolean hasSagaId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sagaId' field.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder clearSagaId() {
      sagaId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ShopId' field.
      * @return The value.
      */
    public java.lang.String getShopId() {
      return ShopId;
    }


    /**
      * Sets the value of the 'ShopId' field.
      * @param value The value of 'ShopId'.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder setShopId(java.lang.String value) {
      validate(fields()[2], value);
      this.ShopId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ShopId' field has been set.
      * @return True if the 'ShopId' field has been set, false otherwise.
      */
    public boolean hasShopId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ShopId' field.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder clearShopId() {
      ShopId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.lang.String getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder setOrderId(java.lang.String value) {
      validate(fields()[3], value);
      this.orderId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[4], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder clearCreatedAt() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderApprovalStatus' field.
      * @return The value.
      */
    public co.cp.orderly.kafka.model.avro.OrderApprovalStatus getOrderApprovalStatus() {
      return orderApprovalStatus;
    }


    /**
      * Sets the value of the 'orderApprovalStatus' field.
      * @param value The value of 'orderApprovalStatus'.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder setOrderApprovalStatus(co.cp.orderly.kafka.model.avro.OrderApprovalStatus value) {
      validate(fields()[5], value);
      this.orderApprovalStatus = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'orderApprovalStatus' field has been set.
      * @return True if the 'orderApprovalStatus' field has been set, false otherwise.
      */
    public boolean hasOrderApprovalStatus() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'orderApprovalStatus' field.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder clearOrderApprovalStatus() {
      orderApprovalStatus = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'errorMessages' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getErrorMessages() {
      return errorMessages;
    }


    /**
      * Sets the value of the 'errorMessages' field.
      * @param value The value of 'errorMessages'.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder setErrorMessages(java.util.List<java.lang.String> value) {
      validate(fields()[6], value);
      this.errorMessages = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'errorMessages' field has been set.
      * @return True if the 'errorMessages' field has been set, false otherwise.
      */
    public boolean hasErrorMessages() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'errorMessages' field.
      * @return This builder.
      */
    public co.cp.orderly.kafka.model.avro.ShopApprovalResponseAvroModel.Builder clearErrorMessages() {
      errorMessages = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ShopApprovalResponseAvroModel build() {
      try {
        ShopApprovalResponseAvroModel record = new ShopApprovalResponseAvroModel();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.lang.String) defaultValue(fields()[1]);
        record.ShopId = fieldSetFlags()[2] ? this.ShopId : (java.lang.String) defaultValue(fields()[2]);
        record.orderId = fieldSetFlags()[3] ? this.orderId : (java.lang.String) defaultValue(fields()[3]);
        record.createdAt = fieldSetFlags()[4] ? this.createdAt : (java.time.Instant) defaultValue(fields()[4]);
        record.orderApprovalStatus = fieldSetFlags()[5] ? this.orderApprovalStatus : (co.cp.orderly.kafka.model.avro.OrderApprovalStatus) defaultValue(fields()[5]);
        record.errorMessages = fieldSetFlags()[6] ? this.errorMessages : (java.util.List<java.lang.String>) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ShopApprovalResponseAvroModel>
    WRITER$ = (org.apache.avro.io.DatumWriter<ShopApprovalResponseAvroModel>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ShopApprovalResponseAvroModel>
    READER$ = (org.apache.avro.io.DatumReader<ShopApprovalResponseAvroModel>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










